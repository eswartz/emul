
-- switching disk DSRs does not reset properly (even with hard reset); need to restart

-- loading machine images < 2015 locks up

-- loading machine images from another machine does not properly kill & restart client

Fix keyboard implementation:

-- too close a tie between the host keyboard and the 99/4A CRU map

Sprite collision info:

http://www.atariage.com/forums/topic/168968-f18a/page__st__750#entry2648609




test program for pasting:
	
9 DATA 1,5,1,27,5,10,5,22,9,3,9,29,13,13,13,19,17,2,17,23,21,7,21,27
10 CALL CLEAR::CALL CHARSET::CALL SCREEN(11)
11 GOTO 20::Z:T::S::RUNDE::PUNKTE::PONGO::BONUS::VASE::I::A::B::P::E1::E2::E3::J::MOT::ST::R::C::X::Y::BP
12 CALL CHAR::CALL MAGNIFY::CALL SPRITE::CALL KEY::CALL EINLEITUNG::CALL COLOR::CALL DELSPRITE::CALL HCHAR::CALL GCHAR::CALL STAND
13 CALL SOUND::CALL PONGOANZ::CALL COINC::CALL MOTION::CALL POSITION::CALL PATTERN::CALL VCHAR::CALL MELODY::CALL LOCATE::CALL MELODY2
14 CALL MELODY3::!@P-
20 CALL CHAR(128,"000103061F1F0703113F3F130707070F10F0E0F0F0F0E0C080E0E0F0FB3B3E78")
30 CALL CHAR(64,"3C4299A1A199423C")
40 DISPLAY AT(1,10):"P O N G O"::DISPLAY AT(2,10):"========="::CALL MAGNIFY(4)::CALL SPRITE(#1,128,14,24,106)
50 DISPLAY AT(24,1):"  @ 1983 VOLKER BECKER "
60 DISPLAY AT(12,1):"   WOLLEN SIE EINE SPIELANLEITUNG ? (J/N)"
70 CALL KEY(5,T,S)::IF T=74 THEN 80 ELSE IF T=78 THEN 90 ELSE 70
80 CALL EINLEITUNG
90 CALL CLEAR
95 RUNDE=0::PUNKTE=0::PONGO=5::BONUS=0
100 ON ERROR 690
110 CALL COLOR(2,8,2,3,10,2,4,10,2)
120 CALL COLOR(5,10,2,6,10,2,7,10,2,8,10,2)
130 CALL CHAR(100,"001B1F0F0F0FC7F3373F1F1F1F0F060E00D8F8F0F0F0E3CFECFCF8F8F8F06070")
140 CALL CHAR(104,"000000000000060F86F6FEFF1F9EFEF800000000000000303078FCF6FEFE7E3B")
150 CALL CHAR(96,"000000183C2EFE1F0100000000000100000000000000000084C2F2E6CC98F0E0")
160 CALL CHAR(36,"0000000000031F3F7F7F3F1F16354484000000000000C0FCFEFEFCF80C0A91A1")
170 CALL CHAR(40,"00000E11150F61530F030103070F060E00007088A87086CAF0C080C0E0F06070")
180 CALL CHAR(47,"FFFF001C0C7E1414")
190 CALL SCREEN(2)::CALL COLOR(0,2,2,1,11,2)::CALL COLOR(14,8,2)
200 CALL CLEAR
210 CALL CHAR(33,"FFFFFFFF7E3CDBFF")::CALL CHAR(34,"0000FF7E3C3C3C7E")
220 CALL CHAR(136,"FFFFC3E77E3CFFFFC0FFC0C0FFC0C0FFC0C0FFC0C0FFC0C0FFC0C0FFC0C0FFC0")::CALL CHAR(140,"03FF0303FF0303FF0303FF0303FF0303FF0303FF0303FF03")
240 CALL CHAR(132,"080F070F0F0F07030107070FDFDC7C1E0080C060F8F8E0C088FCFCC8E0E0E0F0")
250 CALL CLEAR::CALL DELSPRITE(ALL)::VASE=0
260 CALL MAGNIFY(3)
270 RESTORE 9::CALL CHAR(143,"FFFF")::CALL HCHAR(1,1,143,32)::CALL HCHAR(24,1,143,32)
280 FOR I=4 TO 20 STEP 4::CALL HCHAR(I,1,136,32)::NEXT I
290 CALL SPRITE(#1,128,2,168,120)
300 FOR I=1 TO 12::READ A,B::CALL HCHAR(A,B,137)::CALL HCHAR(A+1,B,138)::CALL HCHAR(A+2,B,139)
310 CALL HCHAR(A,B+1,140)::CALL HCHAR(A+1,B+1,141)::CALL HCHAR(A+2,B+1,142)::NEXT I
320 RANDOMIZE::FOR I=4 TO 20 STEP 8
330 P=INT(RND*31)+1::CALL GCHAR(I-1,P,E1)::CALL GCHAR(I+1,P,E2)::IF E1<>32 OR E2<>32 THEN 330
340 CALL HCHAR(I,P,32)::NEXT I
350 FOR I=4 TO 20 STEP 4
360 FOR J=1 TO 2
370 P=INT(RND*26)+2::CALL GCHAR(I,P,E1)::CALL GCHAR(I+1,P,E2)::CALL GCHAR(I-1,P,E3)::IF E1=32 OR E2<>32 OR E3<>32 THEN 370
380 CALL HCHAR(I-1,P,33)::CALL HCHAR(I-2,P,34)::NEXT J::NEXT I
390 RUNDE=RUNDE+1::MOT=RUNDE::IF MOT>8 THEN MOT=8
400 CALL STAND(PUNKTE,RUNDE,VASE)::IF RUNDE>5 THEN CALL SPRITE(#4,40,14,40,150,0,-(MOT+5))
410 IF RUNDE>7 THEN CALL SPRITE(#5,40,12,8,59,0,MOT+5)
420 CALL SPRITE(#2,36,3,72,20,0,(5+MOT)/2)
430 IF RUNDE>1 THEN CALL SPRITE(#3,36,4,136,200,0,-(5+MOT)/2)
440 IF RUNDE>3 THEN CALL SPRITE(#6,96,12,104,120,0,-MOT)
450 CALL COLOR(14,8,2,1,11,2)::CALL COLOR(#1,9)::FOR I=110 TO 310 STEP 10::CALL SOUND(-10,I,0,I+2,0,I+3,0)::NEXT I::CALL PONGOANZ(PONGO)
460 CALL COINC(ALL,ST)::IF ST=-1 THEN 690
470 CALL KEY(5,T,S)::CALL MOTION(#1,0,0)::IF T=44 THEN 570 ELSE IF T=46 THEN 580
480 IF T=65 THEN 490 ELSE IF T=90 THEN 530 ELSE 460
490 CALL POSITION(#1,R,C)::R=R+2::R=R/8::C=C/8::IF R<1 OR R>24 THEN 640
500 CALL GCHAR(R+2,C+.5,E1)::CALL GCHAR(R+2,C+2,E2)
510 IF E1>135 OR E2>135 THEN CALL PATTERN(#1,100)::CALL MOTION(#1,-8,0)::CALL SOUND(-1,392,0)
520 GOTO 460
530 CALL POSITION(#1,R,C)::R=R-2::R=R/8::IF R>=20.5 THEN 460 ELSE C=C/8
540 CALL GCHAR(R+4,C+.5,E1)::CALL GCHAR(R+4,C+2,E2)
550 IF E1<>32 OR E2<>32 THEN CALL PATTERN(#1,100)::CALL MOTION(#1,8,0)::CALL SOUND(-1,392,0)
560 GOTO 460
570 IF T=44 THEN CALL MOTION(#1,0,-15)::CALL PATTERN(#1,128)::CALL SOUND(-1,784,0)::GOTO 590
580 IF T=46 THEN CALL MOTION(#1,0,15)::CALL PATTERN(#1,132)::CALL SOUND(-1,784,0)::GOTO 590
590 CALL POSITION(#1,X,Y)::X=X+22::X=X/8::Y=Y/8::CALL GCHAR(X,Y,E1)::CALL GCHAR(X,Y+1,E2)::IF E2=32 OR E1=32 THEN 690
600 CALL GCHAR(X-1,Y,E1)::CALL GCHAR(X-1,Y+1,E2)::IF E1=33 OR E2=33 THEN 610 ELSE 460
610 CALL MOTION(#1,0,0)::CALL SOUND(-50,392,0,523,0,659,0)::IF E1=33 THEN CALL VCHAR(X-2,Y,32,2)::PUNKTE=PUNKTE+20+5*RUNDE::VASE=VASE+1
620 IF E2=33 THEN CALL VCHAR(X-2,Y+1,32,2)::PUNKTE=PUNKTE+20+5*RUNDE::VASE=VASE+1
630 CALL SOUND(-50,392,0,494,0,587,0)::CALL STAND(PUNKTE,RUNDE,VASE)::GOTO 460
640 IF VASE<7 THEN 690
650 PUNKTE=PUNKTE+500+10*RUNDE::CALL STAND(PUNKTE,RUNDE,VASE)::CALL MELODY
660 IF VASE=10 THEN BP=200+50*RUNDE::CALL MELODY3(BP)::PUNKTE=PUNKTE+BP::CALL STAND(PUNKTE,RUNDE,VASE)
670 IF PUNKTE-BONUS*5000<5000 THEN 250
680 PONGO=PONGO+1::BONUS=BONUS+1::CALL MELODY2::CALL PONGOANZ(PONGO)::GOTO 250
690 CALL MOTION(#1,15,0)::CALL PATTERN(#1,104)::FOR I=1100 TO 110 STEP-10::CALL SOUND(-100,I,0,I+1,5,I-1,5)::CALL POSITION(#1,Z,S)::IF Z>=160 THEN 710
700 NEXT I
710 CALL MOTION(#1,0,0)::CALL LOCATE(#1,167,S)
720 IF PUNKTE-BONUS*5000<5000 THEN 740
730 PONGO=PONGO+1::BONUS=BONUS+1::CALL MELODY2
740 PONGO=PONGO-1::IF PONGO=0 THEN 790
750 CALL PONGOANZ(PONGO)::CALL LOCATE(#1,167,120)::CALL PATTERN(#1,128)
760 CALL STAND(PUNKTE,RUNDE,VASE)
770 ON ERROR 690
780 GOTO 460
790 CALL MELODY
800 DISPLAY AT(24,1):" @ 1983 VOLKER BECKER"
810 FOR I=9 TO 11::DISPLAY AT(I,3)SIZE(24):""::NEXT I
820 DISPLAY AT(10,9)SIZE(9):"GAME OVER"::FOR I=1 TO 100::NEXT I
830 DISPLAY AT(10,9)SIZE(9):""::FOR I=1 TO 80::NEXT I
840 CALL KEY(5,T,S)::IF S=0 THEN 820
850 CALL DELSPRITE(ALL)::80 TO 10
855 !@P+
860 SUB STAND(PUNKTE,RUNDE,VASE)::!@P-
870 DISPLAY AT(1,18)SIZE(6):USING "######":PUNKTE
880 DISPLAY AT(1,6)SIZE(2):USING "##":RUNDE::DISPLAY AT(1,12)SIZE(2):USING "##":VASE
885 !@P+
890 SUBEND
900 SUB PONGOANZ(PONGO)
905 GOTO 910::I::!@P-
910 CALL HCHAR(24,3,143,28)
920 IF PONGO=1 THEN SUBEXIT
930 FOR I=1 TO PONGO-1::CALL SOUND(-20,220*2^(I/6),0)::CALL HCHAR(24,2+I,47)::NEXT I
935 !@P+
940 SUBEND
950 SUB MELODY
960 DATA 400,698,349,200,523,262,200,30000,277,400,587,294,200,523,262,200,587,294,200,523,262,200,587,294
965 GOTO 970::I::A::B::C::!@P-
970 DATA 200,659,330,200,698,349,200,30000,262,200,3000,175
980 RESTORE 960
990 FOR I=1 TO 12::READ A,B,C::CALL SOUND(A,B,0,C,0)::NEXT I
995 !@P+
1000 SUBEND
1010 SUB MELODY2
1020 DATA 200,262,200,330,450,392,200,330,450,392,450,784,200,659,450,784
1025 GOTO 1030::I::A::B::!@P-
1030 DISPLAY AT(1,12)SIZE(5):USING "#####":"BONUS"
1040 RESTORE 1010
1050 FOR I=1 TO 8::READ A,B::CALL SOUND(A,B,0)::NEXT I
1060 FOR I=1 TO 150::NEXT I
1070 CALL HCHAR(1,14,143,5)
1075 !@P+
1080 SUBEND
1090 SUB MELODY3(BP)
1100 DATA 262,220,247,196,220,175,196,165,175,147,165,131
1105 GOTO 1110::I::A::!@P-
1110 RESTORE 1100
1120 DISPLAY AT(6,13)SIZE(4):USING "####":BP
1130 FOR I=1 TO 12::READ A::CALL SOUND(-100,A,0,A+2,0,A+3,0)::NEXT I
1140 DISPLAY AT(6,13)SIZE(4):" "
1145 !@P+
1150 SUBEND
10000 SUB EINLEITUNG
10005 GOTO 10010::T::S::!@P-
10010 CALL CLEAR::CALL DELSPRITE(ALL)
10020 DISPLAY AT(1,1):"ZIEL DES SPIELES IST ES PONGO AUF EINE DER BEIDEN OBEREN LEITERN ZU FUEHREN UND DABEI SO VIELE VASEN WIE MOEGLICH ZU SAMMELN."
10030 DISPLAY AT(6,1):"PONGO KANN EINE DER LEITERN NUR DANN UNBESCHADET HINAUF-STEIGEN, WENN ER MINDESTENS 7 VASEN AUF SEINEM WEG NACH OBEN GESAMMELT HAT."
10040 DISPLAY AT(11,1):"BETRITT PONGO EINE DER ZWEI OBER EN LEITERN OHNE MINDES-TENS 7 VASEN ZU HABEN, SO FAELLT ER VON GERUEST."
10050 DISPLAY AT(15,1):"PONGO FAELLT EBENFALLS VON GERUEST, WENN ER AUF EINER LEITER ZUR SEITE GEHT,UEBER ODER IN DIE NAEHE EINES LOCHES GEHT,DEN BILDSCHIRM"
10060 DISPLAY AT(20,1):"AN DEN SEITEN VERLASST ODERVON EINEM WESEN AUF DEM GERUEST BERUEHRT WIRD."
10070 DISPLAY AT(24,0):"WEITER MIT E N T E R"
10080 CALL KEY(5,T,S)::IF T=13 THEN 10090 ELSE 10080
10090 CALL CLEAR
10100 DISPLAY AT(1,1):"S T E U E R U N G,----------------------------"
10110 DISPLAY AT(4,1):"PONGO BEWEGT SICH MIT','-NACH LINKS '.'-NACH RECHTS 'A'-DIE LEITER 'Z'-DIE LEITER HINUNTER."
10120 DISPLAY AT(10,1):"ZU SPIELBEGINN STEHEN 5 'PONGOS' ZUR VERFUEGUNG."
10130 DISPLAY AT(12,1):"ALLE 5000 PUNKTE GIBT ES EINEN ZUSAETZLICHEN PONGO."
10132 DISPLAY AT(16,1):"PUNKTANZEIGE:    -----------------"
10134 DISPLAY AT(18,1):"LINKS-RUNDENCAHL MITT E-ANZ.DER VASEN RECHTS - PUNKTE"
10140 DISPLAY AT(24,1):"WEITER MIT E N T E R"
10150 CALL KEY(5,T,S)::IF T=13 THEN 10160 ELSE 10150
10160 CALL CLEAR
10170 DISPLAY AT(1,1):"PUNKT WERTUNG :----------------------------"
10180 DISPLAY AT(4,1):"FUER JEDEN GESAMMELTE VASE: 20 + 5 MAL RUNDENZAHL"
10190 DISPLAY AT(7,1):"FUER DAS ERREICHEN EINER DEROBEREN BEIDEN LEITERN MIT MINDESTENS 7 VASEN:500+10 MAL RUNDENZAHL"
10200 DISPLAY AT(12,1):"WENN ES PONGO GELINGT IN EINER RUNDE ALLE 10 VASEN ZUSAMMELN:    :200 + 50 MAL RUNDENZAHL"
10210 DISPLAY AT(17,1):"---------------------------"
10220 DISPLAY AT(19,1):"NACH SPIELENDE IRGEND EINE TASTE DRUECKEN FUER EIN NEUES SPIEL."
10225 DISPLAY AT(23,1):"** VIEL SPASS BEIM SPIEL ** BITTE DRUECKEN SIE E N T E R"
10230 CALL KEY(5,T,S)::IF T=13 THEN 10240 ELSE 10230
10235 !@P+
10240 SUBEND 


220, 690, 10020, 10030, 10050
