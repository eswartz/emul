8000 >gram_disk_base
EFF0 (first)
FBF6 (up0)
FCC0 (slit-pad0)
FDC0 TIB
FF40 (rp0)
FFC0 (sp0)
0000 msx-use-drawchar-accel
0001 #y-border
0002 tab-size
0003 #regsym
0004 secs-per-block
0005 #gfind
0006 #number
0007 #decorated-number
0008 #x-border
0009 secs-per-track
000A nl
000B last-video-mode
000C >grom_font5x6
000E #dheap
0010 kbdbufsize
0012 #y-menu
0014 t-data-size
001F &nmask
0020 #GRAM
0022 (#numbuf)
0028 tracks-per-side
0039 IRfrom
003A IRdrop
003B IatR
003C Irpidx
003D Ilpidx
003E Ilocal
003F Ilalloc
0040 |immed
0041 Isub
0046 Iumul
0047 Iudivmod
004A #statuscol
0060 #localspace
0061 Icload
0062 Istore
0063 Icstore
0066 Iuser
0067 Iupidx
0068 v-data-size
006A IplusLoopUp
006C Icfill
006E Icmove
006F Iccompare
0070 Iexit
0071 Iexiti
0072 Iexecute
0073 Idovar
0074 Isyscall
0076 IcontextFrom
0077 ItoContext
0078 IlitB
0079 IlitW
007A IbranchB
007C editsz
0080 |srch
0082 'KBD
0083 'KBDA
0088 'DSKST
0089 'DSKTRK
008A 'DSKSEC
008B 'DSKDAT
008C 'DSKFLG
008D 'DSKNUM
00A0 #dskCmdWriteSector
00F0 #dskCmdInterrupt
00FF 'DBG
0100 bytes-per-sector
0400 (BOOT)
0402 (#blk)
0404 DP0
0406 (LATEST)
0408 #CHAR
040A #CELL
040C LOCALS
040E GROM-DICT
0410 #CELL
0412 cells
0416 ;S
0418 @
041A c@
041C d@
0420 !
0422 c!
0424 d!
0428 +!
042A c+!
042C d+!
0430 1+
0432 2+
0434 1-
0436 2-
0438 dup
043A drop
043C swap
043E 2swap
0442 over
0444 2over
0448 rot
044A 2rot
044E 0=
0450 D0=
0454 =
0456 D=
045A 0branch
045C branch
045E negate
0460 dnegate
0464 +
0466 d+
046A -
046C d-
0470 um*
0472 um/mod
0474 nip
0478 invert
047A dinvert
047E not
0480 dnot
0484 or
0486 dor
048A and
048C dand
0490 xor
0492 dxor
0496 nand
0498 dnand
049C >r
049E 2>r
04A2 r>
04A4 2r>
04A8 rdrop
04AA r@
04AC i
04AE 2r@
04B2 i'
04B6 j
04BA j'
04BE k
04C2 k'
04C6 sp@
04CA sp!
04CE rp@
04D2 rp!
04D6 lp@
04DA lp!
04DE (do)
04E2 (loop)
04E4 (+loop)
04E6 (?do)
04EE execute
04F0 ?dup
04F2 2dup
04F6 0<
04FA 0<=
04FE 0>
0502 0>=
0506 0U<
050A 0U<=
050E 0U>
0512 0U>=
0516 <
0518 <=
051A >
051C >=
051E U<
0520 U<=
0522 U>
0524 U>=
0526 D0<
052A D0<=
052E D0>
0532 D0>=
0536 DU0<
053A DU0<=
053E DU0>
0542 DU0>=
0546 D<
054A D<=
054E D>
0552 D>=
0556 DU<
055A DU<=
055E DU>
0562 DU>=
0566 unloop
056A 2rdrop
056E 2/
0570 2*
0572 LSHIFT
0574 RSHIFT
0576 URSHIFT
0578 CRSHIFT
057A SWPB
057E DLSHIFT
0582 DRSHIFT
0586 DURSHIFT
058A DCRSHIFT
058E *
0592 2drop
0596 d>q
059C dum/mod
05A0 s>d
05A4 true
05A6 false
05A8 (fill)
05AA (cfill)
05AC (cmove)
05AE (LITERAL)
05B0 (DLITERAL)
05B4 ((s"))
05C0 (S")
05C4 0<>
05C8 <>
05CC VDPRD
05CE VDPST
05D0 VDPWD
05D2 VDPWA
05D4 VDPCL
05D8 VDPWI
05DC GPLRD
05E0 GPLRA
05E4 GPLWD
05E8 GPLWA
05EC SPCHRD
05F0 SPCHWT
05F4 KBD
05F8 SOUND
05FC 'INTS
0600 'INTSP
0604 'GATE
0608 'RND
060C IntVecs
0610 INT_RESET
0614 INT_NMI
0618 INT_FAULT
061C INT_KBD
061E INT_VDP
0620 INT_BKPT
0622 CHARS/BLOCK
0626 RamTop
062A (rdefertbl)
062E UP0
0632 >call
063A call>
063E call,
0644 inlineable
0662 inlineable-imm
0690 STATE
0694 literal
06C4 dliteral
0706 literal@
0742 compile,
0822 RamVar
0830 +Nfield
0834 +field
0838 +1field
083C vwaddr
0840 !vwaddr
0848 +vwaddr
084E +!vwaddr
0858 gwaddr
085C graddr
0862 g@
086E g!
087A gc@
0880 gc!
0886 vc@
088C vc!
0892 +vc@
0898 +vc!
089E vfill
08A8 +vfill
08B2 +gvmove
08C0 vcmove
08CA cvmove
08D4 gcmove
08E0 cgmove
08EA >bit
0904 (gtypez)
0912 gtypez
0916 gtype
092A vvmove
096E bitset
0978 |!
0980 %-
098A w>l.h
0994 l.h>w
099A umax
09A6 umin
09B1 handler
09B2 catch
09CA throw
09EA ?throw
09F2 exc-init
09F8 v-data
09FC v-screen
0A00 v-screensz
0A04 v-patts
0A08 v-pattsz
0A0C v-colors
0A10 v-colorsz
0A14 v-sprites
0A18 v-sprcol
0A1C v-sprpat
0A20 v-sprmot
0A24 v-free
0A28 v-text
0A2C v-mono
0A30 v-width
0A34 v-height
0A38 v-page
0A3C v-stride
0A40 video-modes
0A5A text
0A5C gfx
0A5E bitmap
0A60 gfx2
0A62 gfx3
0A64 gfx4
0A66 gfx5
0A68 gfx6
0A6A gfx7
0A6C text2
0A70 mono
0A74 multi
0A78 vsetbank
0A8C >vr
0A9C v-regaddr
0AB2 (vr!)
0AC0 (vr@)
0AC6 write-vregs
0AD4 write-vmoderegs
0AE6 vid-show
0AF4 std-set-screen-reg
0B06 std-set-color-reg
0B1E std-set-patt-reg
0B30 std-set-sprite-reg
0B48 std-set-sprpat-reg
0B5A >v-fontaddr
0B66 v-curs-under
0B6A v-curs
0B6E v-cursor-timer
0B72 write-var-list
0B82 v-set-alloc-list
0B8A (mode)
0BCE fg
0BD2 bg
0BD6 color-byte
0BE4 color-word
0BF2 v-refresh-colors
0BF8 fg!
0C02 bg!
0C06 (#blks)
0C0C fg@
0C10 bg@
0C14 msx-enhregs
0C24 (vreset)
0C34 vreset
0C40 vstdpal
0C58 v-cursor-off
0C68 update-cursor
0C80 (sprite-setup)
0CA0 std-sprite-setup
0CAC v9938-sprite-setup
0CC2 txt-choffs
0CCA txt-chaddr
0CD2 txt-waddr
0CD8 txt-drawchar
0CDE txt-readchar
0CE6 txt-blinkcursor
0D0C range-wrap
0D2C (txt-hchar)
0D44 txt-hchar
0D4A txt-vchar
0D8E txt-setupmode
0D94 txt-updatecolors
0D9E txt-clear
0DD0 std-setfont
0E28 TextFunctions
0E54 TextModeParams
0E84 txt-setupregs
0E8A text-mode
0E98 >txt2-coloraddr
0EA8 txt2-blink!
0EC0 txt2-drawchar
0ED6 txt2-clear
0F02 txt2-hchar
0F20 (txt2-hchar-colors)
0F98 txt2-vchar
0FC0 txt2-setupregs
0FC6 Text2Functions
0FE6 Text2ModeParams
101E txt2-setupmode
102E text2-mode
1046 GfxModeParamsCommon
1072 GfxModeParams
1092 gfx-setupregs
109C gfx-setupmode
10A4 gfx-updatecolors
10B2 gfx-mode
10C4 MultiModeParams
10FC multi-readchar
1118 multi-drawchar
1134 multi-setupmode
1168 MultiFunctions
1194 multi-mode
11A6 bit-pixaddr
11BA bit-chaddr
11C4 bit-setupmode
11DA bit-drawchar
1208 (set-bits)
1222 (reset-bits)
122A bit-blinkcursor
1278 bit-clear-rows
12A8 bit-clear
12EC bit-updatecolors
1308 bit-setfont
130A bit-readpixel
1328 bit-drawpixel
136A bit-set-patt-reg
137E bit-set-color-reg
139E bit-setupregs
13AA BitFunctions
13CA BitModeParams
1412 bit-mode
1420 Gfx3ModeParamsDiffs
1434 gfx3-setupregs
143C gfx3-mode
144E MonoModeParamsDiffs
145A mono-mode
1472 msx-stdpalette
1494 msx-vstatus0
149A msx-pixaddr
14B4 msx-setupmode
14D0 msx-cmdsetup
14D8 msx-waitcmdready
14EC msx-waittxready
1502 msx-setupMMMcommand
1512 msx-cmd-word
151C msx-setup-cursor-DXDY
152E msx-cursor-color
1532 msx-adjust-cursor-color
1534 msx-rect
1550 msx-blinkcursor
1568 msx-color-temp
156C msx-updatecolors
1632 msx-setfont
1634 msx-clear
1678 msx-sendcharpixel
1688 msx-drawchar-accel
16EC msx-crosses-bank
1702 msx-drawchar-16
1772 msx-drawchar-4
17EE msx-drawchar-256
185C msx-readpixel-16
1874 msx-drawpixel-16
18A0 msx-readpixel-4
18B6 msx-drawpixel-4
18E0 msx-readpixel-256
18F0 msx-drawpixel-256
1900 msx-set-patt-reg
190A msx-setupregs
1912 MsxFunctions
1922 MsxBaseFunctions
1936 GfxSkinnyModeParams
196A GfxFatModeParams
199E Gfx4ModeParams
19C6 gfx4-mode
19DC Gfx6ModeParams
1A04 gfx6-mode
1A1A Gfx5ModeParams
1A42 gfx5-mode
1A5E Gfx7ModeParams
1A86 gfx7-mode
1A9C mode
1AA4 (setfont)
1AB0 v-font!
1AB8 font!
1AC6 font8x8
1AD0 font6x8
1AD8 font5x6
1AE0 <video
1AEE video>
1AF4 vblink!
1AFC vrwpage
1B9A vvispage
1BEE vpage
1BFE pixel!
1C04 pixel@
1C0A (line)
1C10 op-draw
1C18 line
1C1E slow-drawline
1CBA video-init
1CDA sound-vclear
1CF0 sound-off
1D08 sound-init
1D0C speech-wraddr
1D2C speech-off
1D3C (say)
1D44 speech-init
1D4C t-data
1D50 win-x
1D54 win-y
1D58 win-sx
1D5C win-sy
1D60 win-chxs
1D64 win-chys
1D68 term-refresh
1DB4 term-reset
1DBE (win-update)
1DDC home
1DE2 .xy
1DEC .at-xy
1E04 xy
1E22 at-xy
1E3A .win!
1E9E win!
1EC8 full!
1ED0 .win@
1EE2 win@
1F00 $xy
1F14 txt-xy>addr
1F2C home-col
1F32 ch>xy
1F46 ch>y
1F56 ch>x
1F66 advance-row
1F7E new-line
1FB2 advance-cursor
1FC8 cursor-off
1FD2 crlf
1FD8 bksp
201A chfill
2038 hchar
2060 vchar
20CA cls
2102 (emit)
210A (emit+)
211A emit
214E getch
215C cr
2162 space
2168 type
2176 #vrs
217C vsave
2190 vrestore
21C0 overstrike
21CE clear
21DE strlen
21F0 ACCEPT
228E kbdbuf
2292 kbdstate
2296 randnoise
229A read-row
22A4 toupper
22B2 buffer-key
22DA key-actions
22F0 repeat-key
2332 lookup-key
234A handle-key
237A kbd-scan
23DA kbd-no-key
23F0 kbd-init
240E key?
241C (key)
2436 key
2442 kshift
2448 ints-on
244C ints-off
2450 pick
2458 rpick
2460 cmove
2464 cmove>
2468 m/mod
247A u/mod
247E u/
2484 umod
248A u*
248E U*/MOD
2494 U*/
2498 fill
249C rp0
24A0 sp0
24A4 (dbg)
24AC (dbgf)
24B4 (idle)
24BC (register-symbol)
24C4 (gfind)
24C8 (find)
24CC >NUMBER
24D2 (NUMBER)
24DA (rnd)
24E6 ?stack
24E8 base
24EC dp
24F0 (numbuf)
24F4 (spad)
24F8 here
24FC decimal
2502 hex
2508 digit
2516 demit
251C dtype
2532 d.d
2540 .d
2546 /cells
254A (d)
2550 DEPTH
2558 RDEPTH
2560 TUCK
2564 2!
256C 2@
2574 ALIGN
257C ALIGNED
2582 CHAR+
2586 CHARS
258A CELL+
258E DABS
2596 MOVE
25A6 */
25AC */MOD
25B4 /
25BA /MOD
25C2 ABS
25CA FM/MOD
25EA M*
25FC MAX
2608 MIN
2614 MOD
2618 SM/REM
2636 (skip)
263A abort
263E hld
2642 -pad
2648 <#
264E HOLD
2658 (#)
2668 #
2670 #>
267A #S
2682 .
2688 BL
268C SIGN
2696 SPACES
26AA U.
26B0 COUNT
26B6 (>c)
26C8 (parse-word)
26CE WORD
26DE ENVIRONMENT?
26E2 .R
26FC ERASE
2700 PAD
2708 (match)
2734 (src>)
2744 (>src)
274A (PARSE)
2762 PARSE
2774 (skip-spaces)
2796 U.R
27A6 WITHIN
27AE BLK
27B2 C/L
27B6 \
27CA /STRING
27D2 D.R
27E8 D.
27EE UD.R
27FE UD.
2804 .S
2838 r.S
286C ?
2870 >message
288E message
28A6 L/BLK
28AA FIRST
28AE PREV
28B2 LIMIT
28B6 USE
28BA SCR
28BE ?block
28C6 +BUF
28DC buffer
2906 block
294E dirty?
2956 revert
295C update
2966 save-buffers
2982 flush
2986 EMPTY-BUFFERS
299E load
29B4 ?loading
29BE -->
29C4 thru
29D0 (line)
29DA .line
29F2 list
2A10 index
2A28 latest
2A2C nfa>xt@
2A36 nfa>xt
2A3C xt>nfa
2A5E nfa>imm?
2A66 GCOUNT
2A6E >id
2A74 id.
2A7C GDP
2A80 '
2A90 ,
2A98 ALLOT
2AA0 C,
2AA8 FIND
2ACE (lookup)
2AD8 [']
2ADE IMMEDIATE
2AEA UNUSED
2AF2 dwalk
2B12 .word
2B18 WORDS
2B32 FORGET
2B48 smudge
2B56 docol!
2B58 docon,
2B60 dovalue,
2B6C do>to,
2B6E dovar,
2B76 >BODY
2B78 douser,
2B96 dodoes,
2B9E xt!
2BA0 docol,
2BA2 dodefer!
2BA4 (compile)
2BAE jmpoffs,
2BC4 jmpoffsalloc,
2BE6 >fixup
2BEC loop,
2BF0 (does>)
2BFA does>
2C10 dodefer,
2C1C is-check
2C36 is,
2C3C is?,
2C40 <locals,
2C46 ^locals,
2C4E locals>,
2C54 local,
2C70 (lfetch)
2C78 (laddr)
2C80 cmp?
2C84 [
2C8A ]
2C90 lastnfa
2C94 lastxt
2C9A noop
2C9C ?comp
2CA6 smudge
2CB4 parse-def-name
2CBA name"
2CC8 name,
2CEC CREATE
2D04 [COMPILE]
2D16 POSTPONE
2D26 csp
2D29 leave-list
2D2A !csp
2D34 ?csp
2D40 :
2D52 ;
2D60 ?pairs
2D66 BACK
2D6E IF
2D7A SKIP
2D86 THEN
2D92 ELSE
2DA4 (leave)
2DB4 DO
2DC0 ?DO
2DCE leave-resolve
2DE4 loop-compile
2E02 LOOP
2E0A +LOOP
2E12 LEAVE
2E1C BEGIN
2E22 UNTIL
2E2E AGAIN
2E3A WHILE
2E3E REPEAT
2E4A RECURSE
2E50 EXIT
2E5A DEFER
2E64 IS
2E6A IS?
2E70 CONSTANT
2E7A VARIABLE
2E80 VALUE
2E8A TO
2EA8 UDP
2EAC USER
2EBE :NONAME
2EC8 env:
2ED0 has?
2EDE s,
2EEC SLITERAL
2EF4 S"
2F0E (abort")
2F1E ABORT"
2F30 ."
2F41 loadline
2F42 (
2F4A >IN
2F4E CHAR
2F56 REFILL
2FA2 number
2FC0 RESTORE-INPUT
2FF0 SAVE-INPUT
3004 SOURCE-ID
3012 <input
302E input>
304A ,"
305A huh?
3066 interpreter
307E parse-word
3084 parse-name
3090 interpret
309C EVALUATE
30BA (clrsrc)
30CC ok-prompt?
30E6 QUIT
3122 SOURCE
3136 [CHAR]
313C str=
3140 comment?
315C [ELSE]
31E6 [THEN]
31E8 [THEN]
31EA [IF]
31F0 defined?
31FA [IFUNDEF]
3200 [IFDEF]
3206 >bend
320A >hfree
320E >hinit
3212 >link
3216 >low
321A >cur
321E >high
3222 dict-halloc
3238 dict-hfree
324A dict-hinit
3260 gheap
3264 dyn-halloc
3294 dyn-hfree
32B4 dyn-hinit
32BE heap:
32F2 free?
32F6 bsize
32FE reuse?
33B2 halloc
33F4 hheap?
3410 hdump
3430 hfree
347C hinit
3482 ghdump
3488 ?alloc
348E ?free
3494 allocate
349A free
34A0 per-line
34AE 2u.
34BA 4u.
34CA (dmpln)
351E (quit?)
3528 (pause?)
353C digit
354A d.d
3558 .d
355E (dmp)
3588 dump
358E vdump
3594 gdump
359A mfree
35A2 tolower
35AE s<>
35E3 >rwblk
35E4 wait4
35FC fdc-ready
360C fdc-wait-ready
3614 fdc-command
3622 dsk-flg!
362E dsk-flg?
3634 motor
363A seek-command
3640 seek-track
366C sec>attrs
3676 block>sec
367A disk-seek-sec
3684 drq-ready
368C (dsk-read)
3694 (dsk-write)
369A xfer
36C4 (disk-rwblk)
36FA disk-rwblk
370E gram-rwblk
3736 set-disk
373C fdc-interrupt
3742 DSK1
374E GRAM
3754 R/W
3766 io-init
3769 lcount
376A reset-locals
3780 init-locals
3788 (lfind)
3796 alloc-locals
37B4 (lname,)
37D6 (local,)
3812 is-local
381C to-local
3824 lname,
3832 enter-locals
3852 exit-locals
385A finish-locals
386A :>
3882 ::
38CF 'lines
38D0 redraw-block
38D6 fetch-block
38FC baddrs!
3948 baddr
394C baddr)
3950 (>lend)
397C >lend
3982 to-line
3994 laddrs!
39AE >llen
39B6 >curs
39BE delete-range
39FE insert-range
3A53 'fl
3A54 fl|
3A5A ^curs
3A74 ^del
3A84 ^ins
3A90 ^chr
3A98 caddr>col!
3AA0 ^home
3AC4 ^end
3AE6 space-to-column
3B08 ^char
3B1E +tab
3B30 ~curs
3B4C [line)
3B56 ~del
3B62 ~ins>
3B72 ~ins
3B7E copy-tib
3B8E !copy-line
3B94 !paste
3BB6 ~dup
3BBE pause
3BCA trace
3BDE !left
3BE8 !right
3BF2 !up
3BFA !down
3C02 !block-down
3C08 !block-up
3C0E !dup-line
3C14 !prev-page
3C22 !next-page
3C36 (erase)
3C3E !erase
3C44 !erase-to
3C4E !ins/ovr
3C56 fix-column
3C62 !bksp
3C6C (tab)
3C76 !tab
3C8A !untab
3C9C !enter
3CBE !join
3CC6 !clear
3CCE !load
3CDE !exit
3CE2 !interpret
3CE8 draw-window
3D64 draw-centered-window
3D82 !refresh
3D88 !help
3DAA edittab
3E28 edit.char
3E36 onkey
3E75 in-editor
3E76 init-editor
3E88 save-video
3E9A editor.exit
3EA6 intp.window
3EB2 edit.window
3EB8 edit.drawui
3F5A message-window
3F74 dismiss-window
3F80 edit.message
3F94 edit.drawstatus
4000 >gram_dict_base
4020 drawline
406C edit.drawline
4076 #drawline
4090 edit.drawblock
40A4 surround
40F4 edit.scroll
4108 edit.lastpos!
411C edit.update
4192 (edit)
419E edit
41C2 >edit
41CA regs-init
41E8 cold-init
420E 'quit
4220 cold
422C rnd
4234 lines
4260 bye
4286 ints-check
428C vdp-status
4290 'vsprmot
4294 vdp-ticks
4298 vdp-timeout
429C v-intflag-off?
42A4 vdp-int-handler
42C0 vdp-tick
42F6 kbd-int-handler
430E nmi-int-handler
4320 fault-int-handler
4330 >int-vec
4336 set-int-vec
433A enable-int
434C call-int
4356 ints-init
437E (ms)
43B8 ms
43C0 (RAM0)
43C4 RAM
7E30 Idup_d
7E38 ItoR_d
7E3A Irdrop_d
7E3E ItoLocals
7E3F IfromLocals
7E47 Iudivmod_d
